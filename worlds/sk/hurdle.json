{
  "robots": [
    {
      "x": 1,
      "y": 1,
      "_prev_x": 1,
      "_prev_y": 1,
      "_prev_orientation": 0,
      "objects": {},
      "_orientation": 0,
      "_is_leaky": true,
      "_trace_history": [],
      "_trace_style": "default",
      "_trace_color": "seagreen",
      "__id": 4,
      "model": "classic",
      "possible_initial_positions": [
        [
          1,
          1
        ]
      ]
    }
  ],
  "description": "Reeborg needs to jump the hurdles! They can be any height, and any width. The finish location will always be at (12, 1).",
  "small_tiles": false,
  "rows": 13,
  "cols": 12,
  "background_image": "worlds/images/stadium.png",
  "onload": "# python version to generate random hurdle world\n\nimport random\n\ndef place_walls(x, wall_width):\n\twall_height = random.randrange(1, height)\n\tfor i in range(1, wall_height+1):\n\t\tRUR.add_wall(\"west\", x, i)\n\n\t#go across if needed\n\tif wall_width > 1:\n\t\t#across\n\t\tfor j in range(x, x+wall_width):\n\t\t\tRUR.add_wall(\"north\", j, i)\n\t\tj += 1\n\t\t#down\n\t\tfor k in range(i, 0, -1):\n\t\t\tRUR.add_wall(\"west\", j, k)\n\n\nwidth = 12 #random.randrange(8, 14)\nheight = random.randrange(8, 14)\n\nRUR.set_world_size(width, height)\n\nx = 2\n\nwhile x < width:\n\tif random.randrange(1,100) < 70:\n\t\t#how wide should it be? tend toward width 1\n\t\tif random.randrange(1,100) < 30:\n\t\t\twall_width = random.randrange(2, 5)\n\t\t\t#don't go off edge\n\t\t\tif wall_width + x > width:\n\t\t\t\twall_width = width - x\n\t\telse:\n\t\t\twall_width = 1\n\n\t\tplace_walls(x, wall_width)\n\telse:\n\t\twall_width = 1\n\n\tx += wall_width\n\tif wall_width > 1:\n\t\tx += 1\n\n# put goal at end of world\nRUR.add_final_position(\"racing_flag\", width, 1)\n\n"
}