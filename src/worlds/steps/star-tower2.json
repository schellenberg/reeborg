{
  "robots": [
    {
      "x": 1,
      "y": 1,
      "_prev_x": 1,
      "_prev_y": 1,
      "_prev_orientation": 0,
      "objects": {},
      "_orientation": 0,
      "_is_leaky": true,
      "_trace_history": [],
      "_trace_style": "default",
      "_trace_color": "seagreen",
      "__id": 3,
      "model": "classic"
    }
  ],
  "walls": {},
  "description": "This time Reeborg wants to build star towers in a cave. There are stalactites on the roof of the cave of differing length, so Reeborg wants to make his towers as tall as he can without bumping into them. Like last time, write a program that creates a Star Tower at Reeborgâ€™s starting position, and every other x-position after that (odd x-values). The height of each Star Tower should allow for one empty square beneath the stalactites.",
  "small_tiles": false,
  "rows": 12,
  "cols": 14,
  "pre": "\nthink(0)\nimport random\nwidth = random.randint(6, 13)\nheight = 12\n\nRUR.set_world_size(width, height)\nRUR.fill_background(\"grass\")\nRUR.give_object_to_robot(\"star\",99)\n\n#Create some stalactites\n\nobstacles = []\nfor i in range(width):\n    h = random.randint(8,12)\n    obstacles.append(h)\n    RUR.add_wall(\"south\",i+1,h)\n\n#build the sides of the walls  \n\nfor i in range(width-1):\n    n = obstacles[i]\n    n2 = obstacles[i+1]\n    if n < n2:\n        for j in range(n,n2):\n            RUR.add_wall(\"east\",i+1,j)    \n    elif n2 < n:\n        for j in range(n2,n):\n            RUR.add_wall(\"east\",i+1,j)  \n        \n#fill in mud\nfor i in range(width):\n    for j in range(obstacles[i],13):\n        RUR.add_obstacle(\"mud\",i+1,j)\n\n#create goals\noptions = {'goal' : True}\nfor x in range(0, width,2):\n    for y in range(1,obstacles[x]-1):\n        RUR.add_object(\"star\", x+1,y, options)    \n"
}